enum Role {
  ADMIN
  MEMBER
  GUEST
}

enum Level {
  A1
  A2
  B1
  B2
  C1
  C2
}

enum Language {
  ENGLISH
  SPANISH
}

enum Game {
  AUDIO
  TYPE_WORD
  SELECT_WORD
  SELECT_DEF
  CONJUGATION
}

enum Tense {
  pind
  pprf
  impf
  pret
  # futr
  # cond
  # psub
  # pisb1
  # pisb2
  # fsub
  # ppci
  # ppsi
  # pant
  # fpin
  # cpef
  # ppfs
  # ppss1
  # ppss2
  # fpsb
}

enum SortBy {
  lastTimePracticed
  practicedTimes
  errorCount
  successRate
  memoryRefresher
}

enum sortWordsBy {
  name
  particle
  level
}

type User {
  email: String!
  firstName: String!
  lastName: String!
  createdAt: String!
  id: ID!
  role: Role!
  primaryLanguage: String
}

type DefExample {
  text: String!
  translation: String
}

type WordDefinition {
  def: String!
  examples: [DefExample]
}

type WordTag {
  id: ID!
  user: ID!
  language: Language!
  color: String!
  text: String!
  desc: String
}

type WordStatisticsField {
  lastTimePracticed: Int
  practicedTimes: Int
  errorCount: Int
  successRate: Int
}

type WordStatistics {
  AUDIO: WordStatisticsField
  TYPE_WORD: WordStatisticsField
  SELECT_WORD: WordStatisticsField
  SELECT_DEF: WordStatisticsField
  CONJUGATION: WordStatisticsField
}

type Word {
  id: ID!
  uuid: ID
  name: String!
  createdAt: String!
  updatedAt: Int
  defs: [WordDefinition]!
  particle: String!
  imgUrl: String
  imgDesc: String
  audioUrl: String
  additionalInfo: String
  transcription: String
  user: ID!
  isOffensive: Boolean
  stems: [String]
  tags: [WordTag]
  level: Level
  shortDef: [String]!
  language: Language!
  isLearned: Boolean
  statistics: WordStatistics
  alternativeSpelling: [String]
  conjugation: [Conjugation]
}

type DictionaryWord {
  uuid: ID!
  name: String!
  defs: [WordDefinition]!
  particle: String!
  imgUrl: String
  imgDesc: String
  audioUrl: String
  additionalInfo: String
  transcription: String
  isOffensive: Boolean
  stems: [String]
  shortDef: [String]!
  language: Language!
  conjugation: [Conjugation]
}

type AuthUser {
  email: String!
  firstName: String!
  lastName: String!
  createdAt: String!
  id: ID!
  role: Role!
  token: String!
}

type Suggestions {
  suggestions: [String]
}

union SearchResult = DictionaryWord | Suggestions

type GameConfig {
  name: String!
  desc: String!
  id: String!
  type: Game!
  wordsPerGame: Int!
  optionsPerGame: Int!
  minWords: Int!
  timesToLearn: Int
  orderNum: Int
}

type GameQuestionAdditionalInfo {
  audioUrl: String
  examples: [DefExample]
  imgUrl: String
  shortDef: String
}

type GameQuestion {
  question: [String!]
  options: [String]
  answer: String!
  wordId: ID!
  additionalInfo: GameQuestionAdditionalInfo
  alternativeSpelling: [String]
}

type GameData {
  type: Game!
  task: String!
  questions: [GameQuestion!]
}

type Conjugation {
  cjid: String!
  cjfs: [String!]
}

input DefExampleInput {
  text: String!
  translation: String
}

input DefsInput {
  def: String!
  examples: [DefExampleInput]
}

input WordTagInput {
  color: String!
  text: String!
}

input ConjugationInput {
  cjid: String!
  cjfs: [String!]
}

input NewWordInput {
  uuid: ID
  name: String!
  defs: [DefsInput]!
  particle: String!
  imgUrl: String
  imgDesc: String
  audioUrl: String
  additionalInfo: String
  transcription: String
  isOffensive: Boolean
  stems: [String]
  level: Level
  tags: [String]
  language: Language!
  shortDef: [String]!
  isLearned: Boolean
  alternativeSpelling: [String]
  conjugation: [ConjugationInput]
}

input UpdateWordInput {
  id: ID!
  defs: [DefsInput]
  particle: String
  imgUrl: String
  imgDesc: String
  audioUrl: String
  additionalInfo: String
  transcription: String
  isOffensive: Boolean
  stems: [String]
  level: Level
  tags: [String]
  shortDef: [String]
  isLearned: Boolean
  alternativeSpelling: [String]
}

input SignUpInput {
  email: String!
  password: String!
  firstName: String!
  lastName: String!
  primaryLanguage: String
}

input LoginInput {
  email: String!
  password: String!
}

input WordSearchInput {
  search: String!
  language: Language
}

input GameDataInput {
  gameType: Game!
  sortBy: SortBy
  isReverseOrder: Boolean
  tags: [String]
  language: Language
  tense: Tense
}

input UpdateStatisticsInput {
  id: ID!
  hasError: Boolean!
  gameType: Game!
  isLearned: Boolean
}

input WordsInput {
  language: Language
  sortBy: sortWordsBy
  isReverseOrder: Boolean
  tags: [String]
}

input WordTagInput {
  color: String!
  text: String!
  language: Language!
  desc: String
}

input UpdateWordTagInput {
  id: ID!
  color: String!
  text: String!
  desc: String
}

type Query {
  user: User!
  games(language: Language): [GameConfig]!
  game(input: GameDataInput!): GameData!
  words(input: WordsInput): [Word]!
  word(id: ID!): Word!
  searchWord(input: WordSearchInput!): [SearchResult]!
  tags(language: Language): [WordTag]!
}

type Mutation {
  saveWord(input: NewWordInput!): Word!
  updateWord(input: UpdateWordInput!): Word!
  saveGameResult(input: [UpdateStatisticsInput!]): String!
  deleteWord(id: ID!): String!
  signUp(input: SignUpInput!): AuthUser!
  login(input: LoginInput!): AuthUser!
  createTag(input: WordTagInput!): String!
  updateTag(input: UpdateWordTagInput): String!
  deleteTag(id: ID!): WordTag!
}
